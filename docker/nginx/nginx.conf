events {
    worker_connections 1024;
}

http {
    upstream minio_s3 {
        server minio:9000;
    }

    upstream minio_console {
        server minio:9001;
    }

    upstream couchdb_api {
        server couchdb:5984;
    }

    upstream postgres_api {
        server postgres:5432;
    }

    # MinIO S3 API
    server {
        listen 80;
        server_name s3.localhost;

        # Allow special characters in headers
        ignore_invalid_headers off;
        # Allow any size file to be uploaded.
        client_max_body_size 0;
        # Disable buffering
        proxy_buffering off;
        proxy_request_buffering off;

        location / {
            proxy_set_header Host $http_host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            proxy_connect_timeout 300;
            proxy_http_version 1.1;
            proxy_set_header Connection "";
            chunked_transfer_encoding off;

            proxy_pass http://minio_s3;
        }
    }

    # MinIO Console
    server {
        listen 80;
        server_name console.localhost;

        # Allow special characters in headers
        ignore_invalid_headers off;
        # Allow any size file to be uploaded.
        client_max_body_size 0;
        # Disable buffering
        proxy_buffering off;
        proxy_request_buffering off;

        location / {
            proxy_set_header Host $http_host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-NginX-Proxy true;

            # This is necessary to pass the correct IP to be hashed
            real_ip_header X-Real-IP;

            proxy_connect_timeout 300;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            chunked_transfer_encoding off;

            proxy_pass http://minio_console;
        }
    }

    # CouchDB API
    server {
        listen 80;
        server_name couchdb.localhost;

        location / {
            proxy_set_header Host $http_host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            proxy_pass http://couchdb_api;
        }
    }

    # Default server for topology-nexus-app
    server {
        listen 80 default_server;
        server_name localhost;

        location / {
            return 200 '
<!DOCTYPE html>
<html>
<head><title>Topology Nexus Services</title></head>
<body>
<h1>Topology Nexus Services</h1>
<ul>
<li><a href="http://console.localhost">MinIO Console</a> (minioadmin:minioadmin)</li>
<li><a href="http://couchdb.localhost/_utils">CouchDB Admin</a> (admin:changeme)</li>
<li><a href="http://s3.localhost">MinIO S3 API</a></li>
</ul>
<p>PostgreSQL available at localhost:5432 (nexus:changeme)</p>
</body>
</html>';
            add_header Content-Type text/html;
        }

        location /health {
            return 200 '{"status":"ok","services":["postgres","minio","couchdb"]}';
            add_header Content-Type application/json;
        }
    }
}